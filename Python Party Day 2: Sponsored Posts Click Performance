Question 1 of 3
What is the average click-through rate (CTR) for sponsored product ads for each product category that contains the substring 'Electronics' in its name during October 2024? This analysis will help determine which electronics-related categories are performing optimally.

import pandas as pd


fct_ad_performance['recorded_date'] = pd.to_datetime(fct_ad_performance['recorded_date'])

ads_merged = fct_ad_performance.merge(dim_product, on='product_id', how='left')


oct_electronics_ads = ads_merged[
    (ads_merged['recorded_date'].dt.year == 2024) &
    (ads_merged['recorded_date'].dt.month == 10) &
    (ads_merged['product_category'].str.contains('Electronics', case=False, na=False))
]


oct_electronics_ads['ctr'] = oct_electronics_ads['clicks'] / oct_electronics_ads['impressions']


avg_ctr = oct_electronics_ads.groupby('product_category')['ctr'].mean().reset_index()


Question 2 of 3 
Which product categories have a CTR greater than the aggregated overall average CTR for sponsored product ads during October 2024?
This analysis will identify high-performing categories for further optimization. For this question, we want to calculate CTR for each ad, then get the average across ads by product category & overall.

The Code:
import pandas as pd

fct_ad_performance['recorded_date'] = pd.to_datetime(fct_ad_performance['recorded_date'])

ads_merged = fct_ad_performance.merge(
    dim_product,
    on='product_id',
    how='left'
)

oct_ads = ads_merged[
    (ads_merged['recorded_date'].dt.year == 2024) &
    (ads_merged['recorded_date'].dt.month == 10)
]

oct_ads['ctr'] = oct_ads['clicks'] / oct_ads['impressions']

overall_avg_ctr = oct_ads['ctr'].mean()

category_ctr = oct_ads.groupby('product_category')['ctr'].mean().reset_index()

high_performing_categories = category_ctr[category_ctr['ctr'] > overall_avg_ctr]

print("Overall Average CTR for Oct 2024:", round(overall_avg_ctr, 4))
print("\nHigh Performing Categories (CTR > overall average):")
print(high_performing_categories)


The Output:
Overall Average CTR for Oct 2024: 0.068

High Performing Categories (CTR > overall average):
          product_category      ctr
1                    Books      0.1
2    Electronics & Gadgets  0.07913
3  Electronics Accessories      0.1
5      Electronics Gadgets   0.0725
8                  Kitchen     0.07


print(avg_ctr)


Question 3 of 3
For the product categories identified in the previous question, what is the percentage difference between their CTR and the overall average CTR for October 2024? This analysis will quantify the performance gap to recommend specific categories for targeted advertising optimization.

The code:
import pandas as pd

# 1️⃣ Convert recorded_date to datetime
fct_ad_performance['recorded_date'] = pd.to_datetime(fct_ad_performance['recorded_date'])

# 2️⃣ Merge tables
ads_merged = fct_ad_performance.merge(
    dim_product,
    on='product_id',
    how='left'
)

# 3️⃣ Filter for October 2024
oct_ads = ads_merged[
    (ads_merged['recorded_date'].dt.year == 2024) &
    (ads_merged['recorded_date'].dt.month == 10)
]

# 4️⃣ Calculate CTR per ad
oct_ads['ctr'] = oct_ads['clicks'] / oct_ads['impressions']

# 5️⃣ Calculate overall average CTR
overall_avg_ctr = oct_ads['ctr'].mean()

# 6️⃣ Calculate average CTR by product category
category_ctr = oct_ads.groupby('product_category')['ctr'].mean().reset_index()

# 7️⃣ Filter categories with CTR > overall average CTR
high_perf_categories = category_ctr[category_ctr['ctr'] > overall_avg_ctr]

# 8️⃣ Calculate % difference between category CTR and overall CTR
high_perf_categories['pct_diff'] = ((high_perf_categories['ctr'] - overall_avg_ctr) / overall_avg_ctr) * 100

# 9️⃣ Print results
print("Overall Average CTR for Oct 2024:", round(overall_avg_ctr, 4))
print("\nHigh Performing Categories with % Difference:")
print(high_perf_categories[['product_category', 'ctr', 'pct_diff']])
